start: ldf_container

?ldf_container: ldf_header ldf_nodes ldf_signals ldf_frames

?ldf_nodes : "Nodes {" [ldf_node_master] [ldf_node_slaves] "}" 
?ldf_signals : "Signals {" [ldf_signal (ldf_signal)*] "}"  
?ldf_frames : "Frames {" [ldf_frame (ldf_frame)*] "}" 

ldf_node_master: "Master:" ldf_node_name";" 
ldf_node_slaves: "Slaves:" ldf_node_name";" 

ldf_node : ldf_signal_name  ":" ldf_node_name ";" 
ldf_signal :  ldf_signal_name ":" ldf_signal_size "," ldf_signal_default_value "," ldf_node_name "," ldf_node_name ";" 
ldf_frame : ldf_frame_name  ":" ldf_frame_id "," ldf_node_name "," ldf_frame_len ["{" (ldf_frame_signal)* "}"] 


ldf_frame_signal: ldf_signal_name "," ldf_signal_bit_offset ";" 
ldf_frame_name: CNAME 
ldf_frame_id : C_INT 
ldf_frame_len : C_INT 

ldf_signal_default_value: C_INITIALIZER_LIST|C_INT 
ldf_signal_size: C_INT 
ldf_signal_bit_offset: C_INT 
ldf_signal_name: CNAME 

ldf_node_name: CNAME 

C_INITIALIZER_LIST: ["{"|"{ "] C_INT (","C_INT)* ["}"|" }"]
C_INT: "0x"HEXDIGIT+ | HEXDIGIT+ 

ldf_header: (ldf_header_lin | ldf_header_channel)*  
ldf_header_lin : "LIN_"/.*;/
ldf_header_channel : "Channel_name"/.*;/

%import common._STRING_INNER

%import common.HEXDIGIT 
%import common.INT
%import common.WORD
%import common.CNAME
%import common.ESCAPED_STRING
%import common.SIGNED_NUMBER
%import common.WS
%import common.WS_INLINE
%ignore WS
%ignore WS_INLINE